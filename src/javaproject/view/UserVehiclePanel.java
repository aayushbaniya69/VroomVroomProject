/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package javaproject.view;

import javax.swing.*;
import java.awt.*;
import javaproject.controller.VehicleController;
import javaproject.model.Vehicle;

/**
 * UserVehiclePanel class displaying a list of vehicles in a scrollable view.
 * This panel is used in the user dashboard to show available vehicles.
 */
public class UserVehiclePanel extends javax.swing.JPanel {
    private JPanel vehicleListPanel;  // Panel that holds individual vehicle cards

    /**
     * Creates new form UserVehiclePanel
     */
    public UserVehiclePanel() {
        initComponents();  // Initialize UI components
        setUpVehicleListPanel();
        loadVehicles();
    }

    /**
     * Load all vehicles from the VehicleController and display them as cards.
     */
    private void loadVehicles() {
        VehicleController controller = VehicleController.getInstance();

        for (Vehicle v : controller.getAllVehicles()) {
            // Load image from file path, scaled nicely
            ImageIcon icon = loadImage(v.getImagePath());

            // Create a new vehicle card with the vehicle's details
            VehicleCardPanel card = new VehicleCardPanel(
                v.getVehicleId(),
                v.getName(),
                String.valueOf(v.getPrice()),
                v.getStatus(),
                icon
            );

            // Add the card to the vehicle list panel
            vehicleListPanel.add(card);
        }

        // Refresh UI
        vehicleListPanel.revalidate();
        vehicleListPanel.repaint();
    }

    /**
     * Load image from file system path.
     * If the image is not found, loads a default image from resources.
     * @param imagePath Absolute or relative file path to image
     * @return ImageIcon, scaled to 200x150
     */
    private ImageIcon loadImage(String imagePath) {
        try {
            java.io.File imgFile = new java.io.File(imagePath);
            if (imgFile.exists()) {
                ImageIcon originalIcon = new ImageIcon(imagePath);
                Image scaled = originalIcon.getImage().getScaledInstance(200, 150, Image.SCALE_SMOOTH);
                return new ImageIcon(scaled);
            } else {
                // fallback to default image from resources
                return getDefaultImageIcon();
            }
        } catch (Exception e) {
            return getDefaultImageIcon();
        }
    }

    private ImageIcon getDefaultImageIcon() {
        try {
            ImageIcon defaultIcon = new ImageIcon(getClass().getResource("/Dashboard/images/default.png"));
            Image scaled = defaultIcon.getImage().getScaledInstance(200, 150, Image.SCALE_SMOOTH);
            return new ImageIcon(scaled);
        } catch (Exception e) {
            // If even default image fails, just return empty icon
            return new ImageIcon();
        }
    }

    /**
     * Set up the vehicle list panel with vertical BoxLayout.
     */
    private void setUpVehicleListPanel() {
        vehicleListPanel = new JPanel();
        vehicleListPanel.setLayout(new BoxLayout(vehicleListPanel, BoxLayout.Y_AXIS));
        vehicleListPanel.setPreferredSize(new Dimension(1100, 800));  // Adjust width as needed

        scrollPane.setViewportView(vehicleListPanel);
    }

    /**
     * Clears current vehicle cards and reloads from controller.
     * Call this method to refresh vehicles after changes.
     */
    public void refreshVehicleList() {
        vehicleListPanel.removeAll();
        loadVehicles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1092, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
}
